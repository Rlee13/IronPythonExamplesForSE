#
# Ch6_Variables_Ex.ipy v.0.1
# The original examples writen in VB.NET and C# can be found in
# Solid Edge Programmer's Guide or in .NET Programmer's Guide
# for Solid Edge (Solid_Edge_API_tcm78-125829.pdf)
#
# Author: Rlee13
# This file is part of IronPython Examples for Solid Edge ST6.
# An up to date version of the software is to be found at:
# https://github.com/Rlee13/pyPLY/
#
# Freeware. For educational purposes only, use it on your own risk.
#
# The program requires Interop.SolidEdge.dll to be copied in its
# folder. The DLL is part of Jason Hewell's project and can be
# downloaded from http://solidedgeinterop.codeplex.com/
# Tested with IronPython 2.7.4 on .NET 4.0 and Solid Edge ST6.
#
# The file has the extension .ipy which is a personal preference,
# feel free to changed it to any other extension.
# Simply run:
#   ipy.exe filename.ipy
#
# History:
# 11.12.13 - Ch6_Variables_Ex.ipy v.0.1
#
import clr
clr.AddReference("Interop.SolidEdge")
clr.AddReference("System.Runtime.InteropServices")

import SolidEdgeDraft as SEDraft
import SolidEdgeFramework as SEFramework
import SolidEdgeConstants as SEConstants
import SolidEdgePart as SEPart
import System.Runtime.InteropServices as SRI
# Console it is not really required as one can use "print"
from System import Console, Math
import math

objApplication = None
objPart = None
objVariables = None
objVariable = None

try:
    # Connect to a running instance of Solid Edge
    objApplication = SRI.Marshal.GetActiveObject("SolidEdge.Application")
    # Get a reference to the active document
    objPart = objApplication.ActiveDocument
    # Get a reference to the variables collection
    objVariables = objPart.Variables
    #Add a variable
    objVariable = objVariables.Add("NewVar", "1.5")
    #Change the formula of the variable to a function
#    objVariable.Formula = "PhysicalProperties_Accuracy"
    #Change the name of the variable
    objVariable.Name = "NewName"
    #Change the value of the variable. This will not change
    #the value of the variable
    objVariable.Value = 123
    #Change the formula of the variable to a static value
    #This causes the formula to be removed and sets the value
    objVariable.Formula = "456"
    #Change the value of the variable. It works now
    objVariable.Value = 789
    #Delete the variable
#    objVariable.Delete()
except Exception, ex:
    Console.WriteLine(ex)
finally:
    if objVariable is not None:
        SRI.Marshal.ReleaseComObject(objVariable)
        objVariable = None

    if objVariables is not None:
        SRI.Marshal.ReleaseComObject(objVariables)
        objVariables = None

    if objPart is not None:
        SRI.Marshal.ReleaseComObject(objPart)
        objPart = None

    if objApplication is not None:
        SRI.Marshal.ReleaseComObject(objApplication)
        objApplication = None
