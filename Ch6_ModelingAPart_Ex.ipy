#
# Ch6_ModelingAPart_Ex.ipy v.0.1
# The original examples writen in VB.NET and C# can be found in
# Solid Edge Programmer's Guide or in .NET Programmer's Guide
# for Solid Edge (Solid_Edge_API_tcm78-125829.pdf).
#
# Author: Rlee13
# This file is part of IronPython Examples for Solid Edge ST6.
# An up to date version of the software is to be found at:
# https://github.com/Rlee13/
#
# Freeware. For educational purposes only, use it at your own risk.
#
# The program requires Interop.SolidEdge.dll to be copied in its
# folder. The DLL is part of Jason Hewell's project and can be
# downloaded from http://solidedgeinterop.codeplex.com/
# Tested with IronPython 2.7.4 on .NET 4.0 and Solid Edge ST6.
#
# The file has the extension .ipy which is a personal preference,
# feel free to changed it to any other extension.
# Simply run:
#   ipy.exe filename.ipy
#
# History:
# 11.12.13 - Ch6_ModelingAPart_Ex.ipy v.0.1
#
import clr
clr.AddReference("Interop.SolidEdge")
clr.AddReference("System.Runtime.InteropServices")

import SolidEdgeDraft as SEDraft
import SolidEdgeFramework as SEFramework
import SolidEdgeConstants as SEConstants
import SolidEdgePart as SEPart
import System.Runtime.InteropServices as SRI
# Console it is not really required as one can use "print"
from System import Console, Array

objApplication = None
objDocuments = None
objPart = None
objProfileSets = None
objProfileSet = None
objProfiles = None
objProfile = None
objRefplanes = None
objRelations2d = None
objRelation2d = None
objLines2d = None
objLine2d = None
objModels = None
objModel = None

try:
    # Connect to a running instance of Solid Edge
    objApplication = SRI.Marshal.GetActiveObject("SolidEdge.Application")
    # Get a reference to the documents collection
    objDocuments = objApplication.Documents
    # Create a new part document
    objPart = objDocuments.Add("SolidEdge.PartDocument")
    # Get a reference to the profile sets collection
    objProfileSets = objPart.ProfileSets
    # Add a new profile set
    objProfileSet = objProfileSets.Add()
    # Get a reference to the profiles collection
    objProfiles = objProfileSet.Profiles
    # Get a reference to the ref planes collection
    objRefplanes = objPart.RefPlanes
    # Add a new profile
    objProfile = objProfiles.Add(objRefplanes.Item(3))
    # Get a reference to the lines2d collection
    objLines2d = objProfile.Lines2d
    # Draw the Base Profile
    objLine2d = objLines2d.AddBy2Points(0, 0, 0.08, 0)
    objLine2d = objLines2d.AddBy2Points(0.08, 0, 0.08, 0.06)
    objLine2d = objLines2d.AddBy2Points(0.08, 0.06, 0.064, 0.06)
    objLine2d = objLines2d.AddBy2Points(0.064, 0.06, 0.064, 0.02)
    objLine2d = objLines2d.AddBy2Points(0.064, 0.02, 0.048, 0.02)
    objLine2d = objLines2d.AddBy2Points(0.048, 0.02, 0.048, 0.06)
    objLine2d = objLines2d.AddBy2Points(0.048, 0.06, 0.032, 0.06)
    objLine2d = objLines2d.AddBy2Points(0.032, 0.06, 0.032, 0.02)
    objLine2d = objLines2d.AddBy2Points(0.032, 0.02, 0.016, 0.02)
    objLine2d = objLines2d.AddBy2Points(0.016, 0.02, 0.016, 0.06)
    objLine2d = objLines2d.AddBy2Points(0.016, 0.06, 0, 0.06)
    objLine2d = objLines2d.AddBy2Points(0, 0.06, 0, 0)
    # Define Relations among the Line objects to make the Profile closed
    objRelations2d = objProfile.Relations2d
    objRelation2d = objRelations2d.AddKeypoint(
                objLines2d.Item(1),
                SEConstants.KeypointIndexConstants.igLineEnd,
                objLines2d.Item(2),
                SEConstants.KeypointIndexConstants.igLineStart)
    objRelation2d = objRelations2d.AddKeypoint(
                objLines2d.Item(2),
                SEConstants.KeypointIndexConstants.igLineEnd,
                objLines2d.Item(3),
                SEConstants.KeypointIndexConstants.igLineStart)
    objRelation2d = objRelations2d.AddKeypoint(
                objLines2d.Item(3),
                SEConstants.KeypointIndexConstants.igLineEnd,
                objLines2d.Item(4),
                SEConstants.KeypointIndexConstants.igLineStart)
    objRelation2d = objRelations2d.AddKeypoint(
                objLines2d.Item(4),
                SEConstants.KeypointIndexConstants.igLineEnd,
                objLines2d.Item(5),
                SEConstants.KeypointIndexConstants.igLineStart)
    objRelation2d = objRelations2d.AddKeypoint(
                objLines2d.Item(5),
                SEConstants.KeypointIndexConstants.igLineEnd,
                objLines2d.Item(6),
                SEConstants.KeypointIndexConstants.igLineStart)
    objRelation2d = objRelations2d.AddKeypoint(
                objLines2d.Item(6),
                SEConstants.KeypointIndexConstants.igLineEnd,
                objLines2d.Item(7),
                SEConstants.KeypointIndexConstants.igLineStart)
    objRelation2d = objRelations2d.AddKeypoint(
                objLines2d.Item(7),
                SEConstants.KeypointIndexConstants.igLineEnd,
                objLines2d.Item(8),
                SEConstants.KeypointIndexConstants.igLineStart)
    objRelation2d = objRelations2d.AddKeypoint(
                objLines2d.Item(8),
                SEConstants.KeypointIndexConstants.igLineEnd,
                objLines2d.Item(9),
                SEConstants.KeypointIndexConstants.igLineStart)
    objRelation2d = objRelations2d.AddKeypoint(
                objLines2d.Item(9),
                SEConstants.KeypointIndexConstants.igLineEnd,
                objLines2d.Item(10),
                SEConstants.KeypointIndexConstants.igLineStart)
    objRelation2d = objRelations2d.AddKeypoint(
                objLines2d.Item(10),
                SEConstants.KeypointIndexConstants.igLineEnd,
                objLines2d.Item(11),
                SEConstants.KeypointIndexConstants.igLineStart)
    objRelation2d = objRelations2d.AddKeypoint(
                objLines2d.Item(11),
                SEConstants.KeypointIndexConstants.igLineEnd,
                objLines2d.Item(12),
                SEConstants.KeypointIndexConstants.igLineStart)
    objRelation2d = objRelations2d.AddKeypoint(
                objLines2d.Item(12),
                SEConstants.KeypointIndexConstants.igLineEnd,
                objLines2d.Item(1),
                SEConstants.KeypointIndexConstants.igLineStart)
    # Close the profile
    objProfile.End(SEPart.ProfileValidationType.igProfileClosed)
    # Hide the profile
    objProfile.Visible = False
    # Create a new array of profile objects
    aProfiles = Array.CreateInstance(SEPart.Profile, 1)
    aProfiles.SetValue(objProfile, 0)
    # Get a reference to the models collection
    objModels = objPart.Models
    # Create the extended protrusion.
    objModel = objModels.AddFiniteExtrudedProtrusion(
                aProfiles.Length,
                aProfiles,
                SEPart.FeaturePropertyConstants.igRight,
                0.05)
except Exception, ex:
    Console.WriteLine(ex)
finally:
    if objModel is not None:
        SRI.Marshal.ReleaseComObject(objModel)
        objModel = None

    if objModels is not None:
        SRI.Marshal.ReleaseComObject(objModels)
        objModels = None

    if objRelations2d is not None:
        SRI.Marshal.ReleaseComObject(objRelations2d)
        objRelations2d = None
     
    if objLine2d is not None:
        SRI.Marshal.ReleaseComObject(objLine2d)
        objLine2d = None
     
    if objLines2d is not None:
        SRI.Marshal.ReleaseComObject(objLines2d)
        objLines2d = None
     
    if objRelation2d is not None:
        SRI.Marshal.ReleaseComObject(objRelation2d)
        objRelation2d = None
     
    if objRefplanes is not None:
        SRI.Marshal.ReleaseComObject(objRefplanes)
        objRefplanes = None
     
    if objProfile is not None:
        SRI.Marshal.ReleaseComObject(objProfile)
        objProfile = None
     
    if objProfiles is not None:
        SRI.Marshal.ReleaseComObject(objProfiles)
        objProfiles = None
     
    if objProfileSet is not None:
        SRI.Marshal.ReleaseComObject(objProfileSet)
        objProfileSet = None
     
    if objProfileSets is not None:
        SRI.Marshal.ReleaseComObject(objProfileSets)
        objProfileSets = None
     
    if objPart is not None:
        SRI.Marshal.ReleaseComObject(objPart)
        objPart = None
     
    if objDocuments is not None:
        SRI.Marshal.ReleaseComObject(objDocuments)
        objDocuments = None

    if objApplication is not None:
        SRI.Marshal.ReleaseComObject(objApplication)
        objApplication = None